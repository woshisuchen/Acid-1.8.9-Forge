buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven { url 'https://files.minecraftforge.net/maven' }
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://repo.spongepowered.org/maven' }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url 'https://repo.spongepowered.org/maven/' }
}

version = "1.8.9"
group=""
archivesBaseName = "Acid-SuperSkider"
compileJava.options.encoding = 'UTF-8'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
	makeObfSourceJar = false
}

dependencies {
	 compile("org.spongepowered:mixin:0.6.4-SNAPSHOT") {
        exclude module: "launchwrapper"
    }
    implementation 'org.jetbrains:annotations:15.0'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'litemod.json'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'litemod.json'
    }
}

mixin {
    add sourceSets.main, "mixins.enjoytheban.refmap.json"
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('org.jetbrains:annotations'))
    }
	
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
	
    classifier = ''
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfShadowJar.mustRunAfter shadowJar

jar {
    manifest.attributes(
            "MixinConfigs": 'mixins.enjoytheban.json',
            "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
            "FMLCorePluginContainsFMLMod": 'buzz.gaoyusense.injection.MixinLoader'
    )
}

configurations {
	mods
    shade
    compile.extendsFrom shade
}
apply plugin: "idea"

idea {
    module {
        inheritOutputDirs = true
    }
}
build.dependsOn shadowJar